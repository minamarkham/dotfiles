#!/usr/bin/env zsh

###############################################################################
# Variables
###############################################################################
WORKSPACE=$DROPBOX/@workspace/setup
INBOX="$HOME/@Inbox"
SLAY_SCREENSHOTS="$INBOX/@Screenshots"
SLAY_HOSTNAME="Peppermint"
GITHUB_USERNAME="minamarkham"
FOLDERS="$WORKSPACE/icons/folders--gradient/downloads/icon-folders"

DIRECTORIES=(
    $HOME/@Inbox
    $HOME/@Inbox/@Apps
    $HOME/@Inbox/@Audio
    $HOME/@Inbox/@Design
    $HOME/@Inbox/@Documents
    $HOME/@Inbox/@Folders
    $HOME/@Inbox/@Images
    $HOME/@Inbox/@Movies
    $HOME/@Inbox/@Screenshots
    $HOME/@Inbox/@Zips
    $HOME/@Projects
    $HOME/@Projects/@beyhive
    $HOME/@Projects/@wip
)

EMOJIONE_URL="https://github.com/emojione/emojione-assets/releases/download/3.1.2/emojione-apple.ttf"

NERDFONTS_RELEASE=$(curl -L -s -H 'Accept: application/json' https://github.com/ryanoasis/nerd-fonts/releases/latest)
NERDFONTS_VERSION=$(get_github_version $NERDFONTS_RELEASE)

NERDFONTS=(
    Hack
    AnonymousPro
    Inconsolata
)

###############################################################################
# Customizations
###############################################################################

step "Making directories…"
for dir in ${DIRECTORIES[@]}; do
    mkd $dir
done

if [[ $(cli_is_installed fileicon) == 1 ]]; then
    echo "${indent}  ︎︎❤︎ Customizing folder icons…"
    if [ -d "$INBOX" ]; then
        fileicon set $INBOX $FOLDERS/download-folder.png
        fileicon set $INBOX/@Apps $FOLDERS/heart-folder.png
        fileicon set $INBOX/@Audio $FOLDERS/music-folder.png
        fileicon set $INBOX/@Documents $FOLDERS/documents-folder.png
        fileicon set $INBOX/@Folders $FOLDERS/star-folder.png
        fileicon set $INBOX/@Images $FOLDERS/photos-folder.png
        fileicon set $INBOX/@Movies $FOLDERS/video-folder.png
        fileicon set $INBOX/@Screenshots $FOLDERS/screenshots-folder.png
        fileicon set $INBOX/@Zips $FOLDERS/smile-folder.png
        fileicon set $PROJECTS $FOLDERS/crown-folder.png
    fi

    if [ -d "$HOME/Dropbox" ]; then
        fileicon set $DROPBOX/@financial $FOLDERS/money-folder.png
        fileicon set $DROPBOX/@legacy $FOLDERS/heart-folder.png
        fileicon set $DROPBOX/@legal $FOLDERS/doodle-folder.png
        fileicon set $DROPBOX/@medical $FOLDERS/sparkles-folder.png
        fileicon set $DROPBOX/apps $FOLDERS/download-folder.png
        fileicon set $DROPBOX/brag.file $FOLDERS/crown-folder.png
        fileicon set $DROPBOX/documents $FOLDERS/documents-folder.png
        fileicon set $DROPBOX/front.porch $FOLDERS/smile-folder.png
        fileicon set $DROPBOX/learning $FOLDERS/z-js-folder.png
        fileicon set $DROPBOX/personal $FOLDERS/calligraphy-folder.png
        fileicon set $DROPBOX/Photos $FOLDERS/photos-folder.png
        fileicon set $DROPBOX/projects $FOLDERS/code-folder.png
        fileicon set $DROPBOX/resources $FOLDERS/type-folder.png
        fileicon set $DROPBOX/shared $FOLDERS/star-folder.png
        fileicon set $DROPBOX/speaking $FOLDERS/talks-folder.png
        fileicon set $DROPBOX/the.setup $FOLDERS/home-folder.png
    fi
    print_in_green "${bold}✓ done!${normal}\n"
else
    print_error "fileicon must be installed! Skipping."
fi

step "Adding dotfiles…"
if [[ $(cli_is_installed chezmoi) == 1 ]]; then
    chezmoi init --apply
    print_in_green "${bold}✓ done!${normal}\n"
else
    print_error "chezmoi must be installed! Skipping."
fi

step "Cloning repositories..."
REPOS=(
    cupcake
    setup
    speedlify
    twitter-archive
    minamarkham
)

REPOS_BEYHIVE=(
    yonce
    yonce-vscode
    yonce-prompt
    yonce-visual-studio
    formation
    httpbey
)

REPOS_WIP=(
    711ty
    beyonce-ipsum
    xo
    beygifs
    partition
)

for repo in ${REPOS[@]}; do
    git clone git@github.com:$GITHUB_USERNAME/$repo.git $PROJECTS
done

for repo in ${REPOS_BEYHIVE[@]}; do
    git clone git@github.com:$GITHUB_USERNAME/$repo.git $BEYHIVE
done

for repo in ${REPOS_WIP[@]}; do
    git clone git@github.com:$GITHUB_USERNAME/$repo.git $WIP
done

step "Customizing Mac…"
if [ $HOSTNAME != $SLAY_HOSTNAME ]; then
    printf "${indent}    ❤︎ Setting computer name… "
    scutil --set ComputerName $SLAY_HOSTNAME && \
    scutil --set HostName $SLAY_HOSTNAME && \
    scutil --set LocalHostName $SLAY_HOSTNAME
    print_in_green "${bold}✓ done!${normal}\n"
else
    print_muted "${indent}✓ Computer name already set. Skipped."
fi

echo "${indent}  ︎︎❤︎ Showing hidden files…"
defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder

echo "${indent}  ︎︎❤︎ Configuring screenshots…"
defaults write com.apple.screencapture type jpg
defaults write com.apple.screencapture location $SLAY_SCREENSHOTS
killall SystemUIServer

step "Switching emojis to EmojiOne…"
if [ ! -f ~/Library/Fonts/emojione-apple.ttf ]; then
    printf "${indent}  [↓] EmojiOne "
    wget -P ~/Library/Fonts $EMOJIONE_URL --quiet
    print_in_green "${bold}✓ done!${normal}\n"
else
    print_muted "${indent}✓ EmojiOne already installed. Skipped."
fi

step "Installing fonts…"
for font in ${NERDFONTS[@]}; do
    if [ ! -d ~/Library/Fonts/$font ]; then
        printf "${indent}  [↓] $font "
        wget -P ~/Library/Fonts https://github.com/ryanoasis/nerd-fonts/releases/download/$NERDFONTS_VERSION/$font.zip --quiet;unzip -q ~/Library/Fonts/$font -d ~/Library/Fonts/$font
        print_in_green "${bold}✓ done!${normal}\n"
    else
        print_muted "${indent}✓ $font already installed. Skipped."
    fi
done

###############################################################################
# OPTIONAL: Follow-ups
###############################################################################
title "Next steps…"
todo "Complete setup checklist: ${bold}https://github.com/minamarkham/setup/blob/master/checklist.md${reset}"